/* Grid system
/* ---------------------------------------------------------- */
@mixin loop-grid-columns($index, $class) {

  @if $index > 0 {

    .grid-col#{$class}-#{$index} {
      display: block;
      flex: 0 0 percentage(($index / $grid-columns));
      max-width: percentage(($index / $grid-columns));
    }
    .grid-col#{$class}-push-#{$index} {
      left: percentage(($index / $grid-columns));
    }
    .grid-col#{$class}-pull-#{$index} {
      right: percentage(($index / $grid-columns));
    }
    .grid-col#{$class}-offset-#{$index} {
      margin-left: percentage(($index / $grid-columns));
    }
    .grid-col#{$class}-order-#{$index} {
      order: $index;
    }
    @include loop-grid-columns(($index - 1), $class);

  } @else {

    .grid-col#{$class}-#{$index} {
      display: none;
    }

    .grid-col-push-#{$index} {
      left: auto;
    }

    .grid-col-pull-#{$index} {
      right: auto;
    }

    .grid-col#{$class}-push-#{$index} {
      left: auto;
    }

    .grid-col#{$class}-pull-#{$index} {
      right: auto;
    }

    .grid-col#{$class}-offset-#{$index} {
      margin-left: 0;
    }

    .grid-col#{$class}-order-#{$index} {
      order: 0;
    }
  }
}

@mixin make-grid($prefix: '') {
  @include loop-grid-columns($grid-columns, $prefix);
}


/* Space system
/* ---------------------------------------------------------- */
@mixin make-space($prefix: '') {
  $properties: (padding, margin);
  $directions: ("", "-top", "-right", "-bottom", "-left");
  $values: [0px, $gap-xss, $gap-xs, $gap-md, $gap-lg, $gap-xl, $gap-xxl];

  @each $property in $properties {

    @each $direction in $directions {

      $property-name: str-slice($property, 0, 1);
      $direction-name: if(str-length($direction) == 0, "", str-slice($direction, 2, 2));

      @for $i from 1 through length($values) {
        $value: nth($values, $i);
        .#{$property-name}#{$direction-name}#{$prefix}-#{$i - 1} {
          #{$property}#{$direction}: $value;
        }
      }

    }

  }
}
